/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { UseQueryOptions, useQuery } from "react-query";
import { Uint128, InstantiateMsg, Coin, ExecuteMsg, Timestamp, Uint64, QueryMsg, Auction, ArrayOfTupleOfUint8AndAuction, Addr, Params } from "./DutchAuctionLaunchpad.types";
import { DutchAuctionLaunchpadQueryClient } from "./DutchAuctionLaunchpad.client";
export interface DutchAuctionLaunchpadReactQuery<TResponse, TData = TResponse> {
  client: DutchAuctionLaunchpadQueryClient;
  options?: UseQueryOptions<TResponse, Error, TData>;
}
export interface DutchAuctionLaunchpadParamsQuery<TData> extends DutchAuctionLaunchpadReactQuery<Params, TData> {}
export function useDutchAuctionLaunchpadParamsQuery<TData = Params>({
  client,
  options
}: DutchAuctionLaunchpadParamsQuery<TData>) {
  return useQuery<Params, Error, TData>(["dutchAuctionLaunchpadParams", client.contractAddress], () => client.params(), options);
}
export interface DutchAuctionLaunchpadAuctionQuery<TData> extends DutchAuctionLaunchpadReactQuery<Auction, TData> {
  args: {
    auctionId: number;
  };
}
export function useDutchAuctionLaunchpadAuctionQuery<TData = Auction>({
  client,
  args,
  options
}: DutchAuctionLaunchpadAuctionQuery<TData>) {
  return useQuery<Auction, Error, TData>(["dutchAuctionLaunchpadAuction", client.contractAddress, JSON.stringify(args)], () => client.auction({
    auctionId: args.auctionId
  }), options);
}
export interface DutchAuctionLaunchpadAuctionsQuery<TData> extends DutchAuctionLaunchpadReactQuery<ArrayOfTupleOfUint8AndAuction, TData> {
  args: {
    limit?: number;
    startAfter?: number;
  };
}
export function useDutchAuctionLaunchpadAuctionsQuery<TData = ArrayOfTupleOfUint8AndAuction>({
  client,
  args,
  options
}: DutchAuctionLaunchpadAuctionsQuery<TData>) {
  return useQuery<ArrayOfTupleOfUint8AndAuction, Error, TData>(["dutchAuctionLaunchpadAuctions", client.contractAddress, JSON.stringify(args)], () => client.auctions({
    limit: args.limit,
    startAfter: args.startAfter
  }), options);
}